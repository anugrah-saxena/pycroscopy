{
  "name": "Pycroscopy",
  "tagline": "A suite of utilities for image processing and scientific analysis of nanoscale imaging of materials. Classes implemented here are ported to a high performance computing platform at Oak Ridge National Laboratory.",
  "body": "PyCroscopy\r\n==========\r\n\r\n>\"They don't think we're microscopists... Let's become pycroscopists then!\" \r\n\r\n>S.J to N.L, 2016\r\n\r\n0. What?\r\n--------------------\r\nA suite of utilities for image processing and scientific analysis of imaging modalities such as multi-frequency scanning probe microscopy, scanning tunneling spectroscopy, x-ray diffraction microscopy, and transmission electron microscopy.\r\nClasses implemented here are ported to a high performance computing platform at Oak Ridge National Laboratory (ORNL).\r\n\r\n1. Why?\r\n---------------\r\nThere is that little thing called open science... \r\n\r\n2. Who?\r\n-----------\r\nThis project begun largely as the effort of materials scientists (_and a physicist_) in the SPM Group at the Center for Nanophase Materials Sciences <https://www.ornl.gov/facility/cnms>, in implementing a python library to analyze the gargantuan stream of images that their microscopes generate; with a lot of help from for their CNMS facility users. By sharing their approach and code for analyzing materials imaging, they hope that it will benefit the wider community of materials science (and other would also follow suite see 1. ;-).\r\n\r\n3. The Structure\r\n-----------------\r\nThe package structure is simple, with 4 modules:\r\n   1. _io_\r\n   2. _processing_\r\n   3. _analysis_\r\n   4. _viz_\r\n\r\nOnce a microscopy data is converted into an HDF5 format by extending some of the simple classes in _io_. The user has access to the rest of the package structure and quite possibly a lot more! (Did we mention HPC?)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}